ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	UART_1_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_1_UartInit, %function
  25              	UART_1_UartInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_1_UART.c"
   1:Generated_Source\PSoC4/UART_1_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_1_UART.c **** * \file UART_1_UART.c
   3:Generated_Source\PSoC4/UART_1_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_1_UART.c **** *
   5:Generated_Source\PSoC4/UART_1_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_1_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_1_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_1_UART.c **** *
   9:Generated_Source\PSoC4/UART_1_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_1_UART.c **** *
  11:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_1_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_1_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_1_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_1_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_1_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_1_UART.c **** 
  19:Generated_Source\PSoC4/UART_1_UART.c **** #include "UART_1_PVT.h"
  20:Generated_Source\PSoC4/UART_1_UART.c **** #include "UART_1_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_1_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_1_UART.c **** 
  23:Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_WAKE_ENABLE_CONST && UART_1_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_1_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_1_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_1_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_1_UART.c ****     */
  28:Generated_Source\PSoC4/UART_1_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_1_UART.c ****     * functionality when UART_1_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_1_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 2


  31:Generated_Source\PSoC4/UART_1_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_1_UART.c ****     */
  33:Generated_Source\PSoC4/UART_1_UART.c ****     uint8 UART_1_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_1_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_WAKE_ENABLE_CONST && UART_1_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_1_UART.c **** 
  37:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_1_UART.c **** 
  39:Generated_Source\PSoC4/UART_1_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_1_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_1_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_1_UART.c **** 
  43:Generated_Source\PSoC4/UART_1_UART.c ****     const UART_1_UART_INIT_STRUCT UART_1_configUart =
  44:Generated_Source\PSoC4/UART_1_UART.c ****     {
  45:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_1_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_1_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_1_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_1_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_1_UART.c ****         (uint32) UART_1_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_1_UART.c ****     };
  78:Generated_Source\PSoC4/UART_1_UART.c **** 
  79:Generated_Source\PSoC4/UART_1_UART.c **** 
  80:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartInit
  82:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_1_UART.c ****     *
  84:Generated_Source\PSoC4/UART_1_UART.c ****     *  Configures the UART_1 for UART operation.
  85:Generated_Source\PSoC4/UART_1_UART.c ****     *
  86:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is intended specifically to be used when the UART_1
  87:Generated_Source\PSoC4/UART_1_UART.c ****     *  configuration is set to “Unconfigured UART_1” in the customizer.
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 3


  88:Generated_Source\PSoC4/UART_1_UART.c ****     *  After initializing the UART_1 in UART mode using this function,
  89:Generated_Source\PSoC4/UART_1_UART.c ****     *  the component can be enabled using the UART_1_Start() or
  90:Generated_Source\PSoC4/UART_1_UART.c ****     * UART_1_Enable() function.
  91:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_1_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_1_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_1_UART.c ****     *
  95:Generated_Source\PSoC4/UART_1_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_1_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_1_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_1_UART.c ****     *
  99:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartInit(const UART_1_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_1_UART.c ****     {
 102:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_1_UART.c **** 
 104:Generated_Source\PSoC4/UART_1_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_1_UART.c ****         {
 106:Generated_Source\PSoC4/UART_1_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_1_UART.c ****         }
 108:Generated_Source\PSoC4/UART_1_UART.c ****         else
 109:Generated_Source\PSoC4/UART_1_UART.c ****         {
 110:Generated_Source\PSoC4/UART_1_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_1_UART.c **** 
 113:Generated_Source\PSoC4/UART_1_UART.c ****         #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_1_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_1_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_1_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_1_UART.c **** 
 119:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SetPins(UART_1_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_1_UART.c **** 
 122:Generated_Source\PSoC4/UART_1_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbMode       = (uint8) UART_1_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_1_UART.c **** 
 127:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_1_UART.c **** 
 132:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_1_UART.c **** 
 137:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/UART_1_UART.c ****             {
 140:Generated_Source\PSoC4/UART_1_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_1_UART.c ****                                                 (UART_1_UART_GET_CTRL_OVS_IRDA_LP(config->oversampl
 143:Generated_Source\PSoC4/UART_1_UART.c ****                                                 (UART_1_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_1_UART.c ****             }
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 4


 145:Generated_Source\PSoC4/UART_1_UART.c ****             else
 146:Generated_Source\PSoC4/UART_1_UART.c ****             {
 147:Generated_Source\PSoC4/UART_1_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_CTRL_REG  = UART_1_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_1_UART.c ****             }
 150:Generated_Source\PSoC4/UART_1_UART.c **** 
 151:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_CTRL_REG     |= UART_1_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_1_UART.c ****                                              UART_1_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAdd
 153:Generated_Source\PSoC4/UART_1_UART.c ****                                              UART_1_CTRL_UART;
 154:Generated_Source\PSoC4/UART_1_UART.c **** 
 155:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_CTRL_REG = UART_1_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_1_UART.c **** 
 158:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_RX_CTRL_REG = UART_1_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx) 
 161:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)   
 162:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPa
 163:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFra
 164:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_1_UART.c **** 
 166:Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_1_UART.c ****             {
 168:Generated_Source\PSoC4/UART_1_UART.c ****                UART_1_UART_RX_CTRL_REG |= UART_1_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_1_UART.c ****                                                     UART_1_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_1_UART.c ****             }
 171:Generated_Source\PSoC4/UART_1_UART.c **** 
 172:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_CTRL_REG      = UART_1_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_RX_CTRL_MEDIAN(config->enableMedianFilte
 174:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_1_UART.c **** 
 176:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_FIFO_CTRL_REG = UART_1_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel)
 177:Generated_Source\PSoC4/UART_1_UART.c **** 
 178:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_MATCH_REG     = UART_1_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_RX_MATCH_MASK(config->multiprocAddrMask)
 181:Generated_Source\PSoC4/UART_1_UART.c **** 
 182:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_TX_CTRL_REG = UART_1_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_TX_CTRL_RETRY_NACK(config->enableRe
 185:Generated_Source\PSoC4/UART_1_UART.c **** 
 186:Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_1_UART.c ****             {
 188:Generated_Source\PSoC4/UART_1_UART.c ****                UART_1_UART_TX_CTRL_REG |= UART_1_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_1_UART.c ****                                                     UART_1_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_1_UART.c ****             }
 191:Generated_Source\PSoC4/UART_1_UART.c **** 
 192:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_TX_CTRL_REG      = UART_1_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_1_UART.c **** 
 195:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_TX_FIFO_CTRL_REG = UART_1_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel)
 196:Generated_Source\PSoC4/UART_1_UART.c **** 
 197:Generated_Source\PSoC4/UART_1_UART.c ****         #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG = UART_1_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPola
 200:Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPola
 201:Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFi
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 5


 202:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_1_UART.c **** 
 204:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntDisable    (UART_1_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntSetPriority(UART_1_ISR_NUMBER, UART_1_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_1_UART.c ****             (void) CyIntSetVector(UART_1_ISR_NUMBER, &UART_1_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_1_UART.c **** 
 209:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_1_UART.c ****         #if(UART_1_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntDisable    (UART_1_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_1_UART.c ****             CyIntSetPriority(UART_1_RX_WAKE_ISR_NUMBER, UART_1_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_1_UART.c ****             (void) CyIntSetVector(UART_1_RX_WAKE_ISR_NUMBER, &UART_1_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_1_UART.c **** 
 216:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_I2C_EC_MASK_REG = UART_1_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_SPI_EC_MASK_REG = UART_1_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_SLAVE_MASK_REG  = UART_1_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_MASTER_MASK_REG = UART_1_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_1_UART.c **** 
 224:Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_IntrTxMask = LO16(UART_1_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_1_UART.c **** 
 227:Generated_Source\PSoC4/UART_1_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_1_UART.c **** 
 232:Generated_Source\PSoC4/UART_1_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_1_UART.c ****         }
 236:Generated_Source\PSoC4/UART_1_UART.c ****     }
 237:Generated_Source\PSoC4/UART_1_UART.c **** 
 238:Generated_Source\PSoC4/UART_1_UART.c **** #else
 239:Generated_Source\PSoC4/UART_1_UART.c **** 
 240:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartInit
 242:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_1_UART.c ****     *
 244:Generated_Source\PSoC4/UART_1_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_1_UART.c ****     *
 246:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartInit(void)
 248:Generated_Source\PSoC4/UART_1_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 6


 249:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_CTRL_REG = UART_1_UART_DEFAULT_CTRL;
  38              		.loc 1 250 0
  39 0004 1A4B     		ldr	r3, .L2
  40 0006 1B4A     		ldr	r2, .L2+4
  41 0008 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/UART_1_UART.c **** 
 252:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_CTRL_REG = UART_1_UART_DEFAULT_UART_CTRL;
  42              		.loc 1 253 0
  43 000a 1B4B     		ldr	r3, .L2+8
  44 000c 0022     		movs	r2, #0
  45 000e 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/UART_1_UART.c **** 
 255:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RX_CTRL_REG = UART_1_UART_DEFAULT_UART_RX_CTRL;
  46              		.loc 1 256 0
  47 0010 1A4B     		ldr	r3, .L2+12
  48 0012 1B4A     		ldr	r2, .L2+16
  49 0014 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_CTRL_REG      = UART_1_UART_DEFAULT_RX_CTRL;
  50              		.loc 1 257 0
  51 0016 1B4B     		ldr	r3, .L2+20
  52 0018 1B4A     		ldr	r2, .L2+24
  53 001a 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_FIFO_CTRL_REG = UART_1_UART_DEFAULT_RX_FIFO_CTRL;
  54              		.loc 1 258 0
  55 001c 1B4B     		ldr	r3, .L2+28
  56 001e 0722     		movs	r2, #7
  57 0020 1A60     		str	r2, [r3]
 259:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_MATCH_REG     = UART_1_UART_DEFAULT_RX_MATCH_REG;
  58              		.loc 1 259 0
  59 0022 1B4B     		ldr	r3, .L2+32
  60 0024 0022     		movs	r2, #0
  61 0026 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART_1_UART.c **** 
 261:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_TX_CTRL_REG = UART_1_UART_DEFAULT_UART_TX_CTRL;
  62              		.loc 1 262 0
  63 0028 1A4B     		ldr	r3, .L2+36
  64 002a 0122     		movs	r2, #1
  65 002c 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_CTRL_REG      = UART_1_UART_DEFAULT_TX_CTRL;
  66              		.loc 1 263 0
  67 002e 1A4B     		ldr	r3, .L2+40
  68 0030 154A     		ldr	r2, .L2+24
  69 0032 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_FIFO_CTRL_REG = UART_1_UART_DEFAULT_TX_FIFO_CTRL;
  70              		.loc 1 264 0
  71 0034 194B     		ldr	r3, .L2+44
  72 0036 0022     		movs	r2, #0
  73 0038 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/UART_1_UART.c **** 
 266:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_FLOW_CTRL_REG = UART_1_UART_DEFAULT_FLOW_CTRL;
 268:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_1_UART.c **** 
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 7


 270:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntDisable    (UART_1_ISR_NUMBER);
 273:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntSetPriority(UART_1_ISR_NUMBER, UART_1_ISR_PRIORITY);
 274:Generated_Source\PSoC4/UART_1_UART.c ****         (void) CyIntSetVector(UART_1_ISR_NUMBER, &UART_1_SPI_UART_ISR);
 275:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_1_UART.c **** 
 277:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntDisable    (UART_1_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/UART_1_UART.c ****         CyIntSetPriority(UART_1_RX_WAKE_ISR_NUMBER, UART_1_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/UART_1_UART.c ****         (void) CyIntSetVector(UART_1_RX_WAKE_ISR_NUMBER, &UART_1_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_1_UART.c **** 
 284:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_I2C_EC_MASK_REG = UART_1_UART_DEFAULT_INTR_I2C_EC_MASK;
  74              		.loc 1 285 0
  75 003a 194B     		ldr	r3, .L2+48
  76 003c 0022     		movs	r2, #0
  77 003e 1A60     		str	r2, [r3]
 286:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_SPI_EC_MASK_REG = UART_1_UART_DEFAULT_INTR_SPI_EC_MASK;
  78              		.loc 1 286 0
  79 0040 184B     		ldr	r3, .L2+52
  80 0042 0022     		movs	r2, #0
  81 0044 1A60     		str	r2, [r3]
 287:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_SLAVE_MASK_REG  = UART_1_UART_DEFAULT_INTR_SLAVE_MASK;
  82              		.loc 1 287 0
  83 0046 184B     		ldr	r3, .L2+56
  84 0048 0022     		movs	r2, #0
  85 004a 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_MASTER_MASK_REG = UART_1_UART_DEFAULT_INTR_MASTER_MASK;
  86              		.loc 1 288 0
  87 004c 174B     		ldr	r3, .L2+60
  88 004e 0022     		movs	r2, #0
  89 0050 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_RX_MASK_REG     = UART_1_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 289 0
  91 0052 174B     		ldr	r3, .L2+64
  92 0054 0022     		movs	r2, #0
  93 0056 1A60     		str	r2, [r3]
 290:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_TX_MASK_REG     = UART_1_UART_DEFAULT_INTR_TX_MASK;
  94              		.loc 1 290 0
  95 0058 164B     		ldr	r3, .L2+68
  96 005a 0022     		movs	r2, #0
  97 005c 1A60     		str	r2, [r3]
 291:Generated_Source\PSoC4/UART_1_UART.c **** 
 292:Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_IntrTxMask = LO16(UART_1_INTR_TX_MASK_REG);
  98              		.loc 1 293 0
  99 005e 154B     		ldr	r3, .L2+68
 100 0060 1B68     		ldr	r3, [r3]
 101 0062 9AB2     		uxth	r2, r3
 102 0064 144B     		ldr	r3, .L2+72
 103 0066 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/UART_1_UART.c **** 
 295:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferHead     = 0u;
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 8


 297:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_1_UART.c **** 
 301:Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_1_UART.c ****     }
 104              		.loc 1 305 0
 105 0068 C046     		nop
 106 006a BD46     		mov	sp, r7
 107              		@ sp needed
 108 006c 80BD     		pop	{r7, pc}
 109              	.L3:
 110 006e C046     		.align	2
 111              	.L2:
 112 0070 00000740 		.word	1074200576
 113 0074 0B000002 		.word	33554443
 114 0078 40000740 		.word	1074200640
 115 007c 48000740 		.word	1074200648
 116 0080 01000A00 		.word	655361
 117 0084 00030740 		.word	1074201344
 118 0088 07000080 		.word	-2147483641
 119 008c 04030740 		.word	1074201348
 120 0090 10030740 		.word	1074201360
 121 0094 44000740 		.word	1074200644
 122 0098 00020740 		.word	1074201088
 123 009c 04020740 		.word	1074201092
 124 00a0 880E0740 		.word	1074204296
 125 00a4 C80E0740 		.word	1074204360
 126 00a8 480F0740 		.word	1074204488
 127 00ac 080F0740 		.word	1074204424
 128 00b0 C80F0740 		.word	1074204616
 129 00b4 880F0740 		.word	1074204552
 130 00b8 00000000 		.word	UART_1_IntrTxMask
 131              		.cfi_endproc
 132              	.LFE0:
 133              		.size	UART_1_UartInit, .-UART_1_UartInit
 134              		.section	.text.UART_1_UartPostEnable,"ax",%progbits
 135              		.align	2
 136              		.global	UART_1_UartPostEnable
 137              		.code	16
 138              		.thumb_func
 139              		.type	UART_1_UartPostEnable, %function
 140              	UART_1_UartPostEnable:
 141              	.LFB1:
 306:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_1_UART.c **** 
 308:Generated_Source\PSoC4/UART_1_UART.c **** 
 309:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartPostEnable
 311:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_1_UART.c **** *
 313:Generated_Source\PSoC4/UART_1_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/UART_1_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_1_UART.c **** *
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 9


 316:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_1_UART.c **** {
 142              		.loc 1 318 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 319:Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_1_UART.c ****         {
 323:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG, UART_1_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_1_UART.c ****                                            UART_1_TX_SDA_MISO_HSIOM_POS, UART_1_TX_SDA_MISO_HSIOM_S
 326:Generated_Source\PSoC4/UART_1_UART.c ****         }
 327:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_1_UART.c **** 
 329:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_SS0_PIN)
 331:Generated_Source\PSoC4/UART_1_UART.c ****             if (UART_1_CHECK_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_1_UART.c ****             {
 333:Generated_Source\PSoC4/UART_1_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG, UART_1_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_1_UART.c ****                                                UART_1_SS0_HSIOM_POS, UART_1_SS0_HSIOM_SEL_UART);
 336:Generated_Source\PSoC4/UART_1_UART.c ****             }
 337:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/UART_1_UART.c **** 
 340:Generated_Source\PSoC4/UART_1_UART.c **** #else
 341:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_1_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_HSIOM_REG, UART_1_TX_HSIOM_MASK,
 152              		.loc 1 343 0
 153 0004 074B     		ldr	r3, .L5
 154 0006 074A     		ldr	r2, .L5
 155 0008 1268     		ldr	r2, [r2]
 156 000a 0749     		ldr	r1, .L5+4
 157 000c 0A40     		ands	r2, r1
 158 000e 9021     		movs	r1, #144
 159 0010 0904     		lsls	r1, r1, #16
 160 0012 0A43     		orrs	r2, r1
 161 0014 1A60     		str	r2, [r3]
 344:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_TX_HSIOM_POS, UART_1_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_1_UART.c **** 
 347:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_RTS_HSIOM_REG, UART_1_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_RTS_HSIOM_POS, UART_1_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 10


 353:Generated_Source\PSoC4/UART_1_UART.c **** 
 354:Generated_Source\PSoC4/UART_1_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_SetTxInterruptMode(UART_1_IntrTxMask);
 162              		.loc 1 355 0
 163 0016 054B     		ldr	r3, .L5+8
 164 0018 054A     		ldr	r2, .L5+12
 165 001a 1288     		ldrh	r2, [r2]
 166 001c 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/UART_1_UART.c **** }
 167              		.loc 1 356 0
 168 001e C046     		nop
 169 0020 BD46     		mov	sp, r7
 170              		@ sp needed
 171 0022 80BD     		pop	{r7, pc}
 172              	.L6:
 173              		.align	2
 174              	.L5:
 175 0024 00000140 		.word	1073807360
 176 0028 FFFF0FFF 		.word	-15728641
 177 002c 880F0740 		.word	1074204552
 178 0030 00000000 		.word	UART_1_IntrTxMask
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	UART_1_UartPostEnable, .-UART_1_UartPostEnable
 182              		.section	.text.UART_1_UartStop,"ax",%progbits
 183              		.align	2
 184              		.global	UART_1_UartStop
 185              		.code	16
 186              		.thumb_func
 187              		.type	UART_1_UartStop, %function
 188              	UART_1_UartStop:
 189              	.LFB2:
 357:Generated_Source\PSoC4/UART_1_UART.c **** 
 358:Generated_Source\PSoC4/UART_1_UART.c **** 
 359:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartStop
 361:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_1_UART.c **** *
 363:Generated_Source\PSoC4/UART_1_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_1_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_1_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_1_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_1_UART.c **** *
 368:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartStop(void)
 370:Generated_Source\PSoC4/UART_1_UART.c **** {
 190              		.loc 1 370 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 371:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 11


 372:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_TX_SDA_MISO_PIN_USED)
 374:Generated_Source\PSoC4/UART_1_UART.c ****         {
 375:Generated_Source\PSoC4/UART_1_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG, UART_1_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_1_UART.c ****                                            UART_1_TX_SDA_MISO_HSIOM_POS, UART_1_TX_SDA_MISO_HSIOM_S
 378:Generated_Source\PSoC4/UART_1_UART.c ****         }
 379:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_1_UART.c **** 
 381:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_SS0_PIN)
 383:Generated_Source\PSoC4/UART_1_UART.c ****             if (UART_1_CHECK_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_1_UART.c ****             {
 385:Generated_Source\PSoC4/UART_1_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_spi_ss0_Write(UART_1_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_1_UART.c **** 
 388:Generated_Source\PSoC4/UART_1_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG, UART_1_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_1_UART.c ****                                                UART_1_SS0_HSIOM_POS, UART_1_SS0_HSIOM_SEL_GPIO);
 391:Generated_Source\PSoC4/UART_1_UART.c ****             }
 392:Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_1_UART.c **** 
 395:Generated_Source\PSoC4/UART_1_UART.c **** #else
 396:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_HSIOM_REG, UART_1_TX_HSIOM_MASK,
 200              		.loc 1 398 0
 201 0004 084B     		ldr	r3, .L8
 202 0006 084A     		ldr	r2, .L8
 203 0008 1268     		ldr	r2, [r2]
 204 000a 0849     		ldr	r1, .L8+4
 205 000c 0A40     		ands	r2, r1
 206 000e 1A60     		str	r2, [r3]
 399:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_TX_HSIOM_POS, UART_1_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_1_UART.c **** 
 402:Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rts_Write(UART_1_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_1_UART.c **** 
 406:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_RTS_HSIOM_REG, UART_1_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_RTS_HSIOM_POS, UART_1_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_1_UART.c **** 
 411:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_1_UART.c **** 
 413:Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_1_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_UART_RX_CTRL_REG &= (uint32) ~UART_1_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_1_UART.c **** 
 418:Generated_Source\PSoC4/UART_1_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_IntrTxMask = LO16(UART_1_GetTxInterruptMode() & UART_1_INTR_UART_TX_RESTORE);
 207              		.loc 1 419 0
 208 0010 074B     		ldr	r3, .L8+8
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 12


 209 0012 1B68     		ldr	r3, [r3]
 210 0014 9AB2     		uxth	r2, r3
 211 0016 E423     		movs	r3, #228
 212 0018 DB00     		lsls	r3, r3, #3
 213 001a 1340     		ands	r3, r2
 214 001c 9AB2     		uxth	r2, r3
 215 001e 054B     		ldr	r3, .L8+12
 216 0020 1A80     		strh	r2, [r3]
 420:Generated_Source\PSoC4/UART_1_UART.c **** }
 217              		.loc 1 420 0
 218 0022 C046     		nop
 219 0024 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0026 80BD     		pop	{r7, pc}
 222              	.L9:
 223              		.align	2
 224              	.L8:
 225 0028 00000140 		.word	1073807360
 226 002c FFFF0FFF 		.word	-15728641
 227 0030 880F0740 		.word	1074204552
 228 0034 00000000 		.word	UART_1_IntrTxMask
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	UART_1_UartStop, .-UART_1_UartStop
 232              		.section	.text.UART_1_UartSetRxAddress,"ax",%progbits
 233              		.align	2
 234              		.global	UART_1_UartSetRxAddress
 235              		.code	16
 236              		.thumb_func
 237              		.type	UART_1_UartSetRxAddress, %function
 238              	UART_1_UartSetRxAddress:
 239              	.LFB3:
 421:Generated_Source\PSoC4/UART_1_UART.c **** 
 422:Generated_Source\PSoC4/UART_1_UART.c **** 
 423:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_1_UART.c **** *
 427:Generated_Source\PSoC4/UART_1_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_1_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_1_UART.c **** *
 430:Generated_Source\PSoC4/UART_1_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_1_UART.c **** *
 432:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_1_UART.c **** {
 240              		.loc 1 434 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 16
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 84B0     		sub	sp, sp, #16
 249              		.cfi_def_cfa_offset 24
 250 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 13


 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 435:Generated_Source\PSoC4/UART_1_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/UART_1_UART.c **** 
 437:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg = UART_1_RX_MATCH_REG;
 253              		.loc 1 437 0
 254 0008 094B     		ldr	r3, .L11
 255 000a 1B68     		ldr	r3, [r3]
 256 000c FB60     		str	r3, [r7, #12]
 438:Generated_Source\PSoC4/UART_1_UART.c **** 
 439:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg &= ((uint32) ~UART_1_RX_MATCH_ADDR_MASK); /* Clear address bits */
 257              		.loc 1 439 0
 258 000e FB68     		ldr	r3, [r7, #12]
 259 0010 FF22     		movs	r2, #255
 260 0012 9343     		bics	r3, r2
 261 0014 FB60     		str	r3, [r7, #12]
 440:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg |= ((uint32)  (address & UART_1_RX_MATCH_ADDR_MASK)); /* Set address  */
 262              		.loc 1 440 0
 263 0016 7B68     		ldr	r3, [r7, #4]
 264 0018 FF22     		movs	r2, #255
 265 001a 1340     		ands	r3, r2
 266 001c FA68     		ldr	r2, [r7, #12]
 267 001e 1343     		orrs	r3, r2
 268 0020 FB60     		str	r3, [r7, #12]
 441:Generated_Source\PSoC4/UART_1_UART.c **** 
 442:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_RX_MATCH_REG = matchReg;
 269              		.loc 1 442 0
 270 0022 034B     		ldr	r3, .L11
 271 0024 FA68     		ldr	r2, [r7, #12]
 272 0026 1A60     		str	r2, [r3]
 443:Generated_Source\PSoC4/UART_1_UART.c **** }
 273              		.loc 1 443 0
 274 0028 C046     		nop
 275 002a BD46     		mov	sp, r7
 276 002c 04B0     		add	sp, sp, #16
 277              		@ sp needed
 278 002e 80BD     		pop	{r7, pc}
 279              	.L12:
 280              		.align	2
 281              	.L11:
 282 0030 10030740 		.word	1074201360
 283              		.cfi_endproc
 284              	.LFE3:
 285              		.size	UART_1_UartSetRxAddress, .-UART_1_UartSetRxAddress
 286              		.section	.text.UART_1_UartSetRxAddressMask,"ax",%progbits
 287              		.align	2
 288              		.global	UART_1_UartSetRxAddressMask
 289              		.code	16
 290              		.thumb_func
 291              		.type	UART_1_UartSetRxAddressMask, %function
 292              	UART_1_UartSetRxAddressMask:
 293              	.LFB4:
 444:Generated_Source\PSoC4/UART_1_UART.c **** 
 445:Generated_Source\PSoC4/UART_1_UART.c **** 
 446:Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_1_UART.c **** ****************************************************************************//**
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 14


 449:Generated_Source\PSoC4/UART_1_UART.c **** *
 450:Generated_Source\PSoC4/UART_1_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_1_UART.c **** *
 452:Generated_Source\PSoC4/UART_1_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_1_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/UART_1_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_1_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_1_UART.c **** *
 457:Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_1_UART.c **** {
 294              		.loc 1 459 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 16
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 84B0     		sub	sp, sp, #16
 303              		.cfi_def_cfa_offset 24
 304 0004 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
 460:Generated_Source\PSoC4/UART_1_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_1_UART.c **** 
 462:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg = UART_1_RX_MATCH_REG;
 307              		.loc 1 462 0
 308 0008 094B     		ldr	r3, .L14
 309 000a 1B68     		ldr	r3, [r3]
 310 000c FB60     		str	r3, [r7, #12]
 463:Generated_Source\PSoC4/UART_1_UART.c **** 
 464:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg &= ((uint32) ~UART_1_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 311              		.loc 1 464 0
 312 000e FB68     		ldr	r3, [r7, #12]
 313 0010 084A     		ldr	r2, .L14+4
 314 0012 1340     		ands	r3, r2
 315 0014 FB60     		str	r3, [r7, #12]
 465:Generated_Source\PSoC4/UART_1_UART.c ****     matchReg |= ((uint32) (addressMask << UART_1_RX_MATCH_MASK_POS));
 316              		.loc 1 465 0
 317 0016 7B68     		ldr	r3, [r7, #4]
 318 0018 1B04     		lsls	r3, r3, #16
 319 001a FA68     		ldr	r2, [r7, #12]
 320 001c 1343     		orrs	r3, r2
 321 001e FB60     		str	r3, [r7, #12]
 466:Generated_Source\PSoC4/UART_1_UART.c **** 
 467:Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_RX_MATCH_REG = matchReg;
 322              		.loc 1 467 0
 323 0020 034B     		ldr	r3, .L14
 324 0022 FA68     		ldr	r2, [r7, #12]
 325 0024 1A60     		str	r2, [r3]
 468:Generated_Source\PSoC4/UART_1_UART.c **** }
 326              		.loc 1 468 0
 327 0026 C046     		nop
 328 0028 BD46     		mov	sp, r7
 329 002a 04B0     		add	sp, sp, #16
 330              		@ sp needed
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 15


 331 002c 80BD     		pop	{r7, pc}
 332              	.L15:
 333 002e C046     		.align	2
 334              	.L14:
 335 0030 10030740 		.word	1074201360
 336 0034 FFFF00FF 		.word	-16711681
 337              		.cfi_endproc
 338              	.LFE4:
 339              		.size	UART_1_UartSetRxAddressMask, .-UART_1_UartSetRxAddressMask
 340              		.section	.text.UART_1_UartGetChar,"ax",%progbits
 341              		.align	2
 342              		.global	UART_1_UartGetChar
 343              		.code	16
 344              		.thumb_func
 345              		.type	UART_1_UartGetChar, %function
 346              	UART_1_UartGetChar:
 347              	.LFB5:
 469:Generated_Source\PSoC4/UART_1_UART.c **** 
 470:Generated_Source\PSoC4/UART_1_UART.c **** 
 471:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartGetChar
 474:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_1_UART.c ****     *
 476:Generated_Source\PSoC4/UART_1_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_1_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/UART_1_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_1_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_1_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_1_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_1_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_1_UART.c ****     *
 485:Generated_Source\PSoC4/UART_1_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_1_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_1_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_1_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_1_UART.c ****     *
 490:Generated_Source\PSoC4/UART_1_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_1_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_1_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_1_UART.c ****     *   Check UART_1_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_1_UART.c ****     *
 497:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_1_UART.c ****     uint32 UART_1_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_1_UART.c ****     {
 348              		.loc 1 499 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 16


 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 500:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData = 0u;
 360              		.loc 1 500 0
 361 0006 0023     		movs	r3, #0
 362 0008 7B60     		str	r3, [r7, #4]
 501:Generated_Source\PSoC4/UART_1_UART.c **** 
 502:Generated_Source\PSoC4/UART_1_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_1_UART.c ****         if (0u != UART_1_SpiUartGetRxBufferSize())
 363              		.loc 1 503 0
 364 000a FFF7FEFF 		bl	UART_1_SpiUartGetRxBufferSize
 365 000e 031E     		subs	r3, r0, #0
 366 0010 03D0     		beq	.L17
 504:Generated_Source\PSoC4/UART_1_UART.c ****         {
 505:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_SpiUartReadRxData();
 367              		.loc 1 505 0
 368 0012 FFF7FEFF 		bl	UART_1_SpiUartReadRxData
 369 0016 0300     		movs	r3, r0
 370 0018 7B60     		str	r3, [r7, #4]
 371              	.L17:
 506:Generated_Source\PSoC4/UART_1_UART.c ****         }
 507:Generated_Source\PSoC4/UART_1_UART.c **** 
 508:Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_INTR_RX(UART_1_INTR_RX_ERR))
 372              		.loc 1 508 0
 373 001a 084B     		ldr	r3, .L20
 374 001c 1A68     		ldr	r2, [r3]
 375 001e D823     		movs	r3, #216
 376 0020 9B00     		lsls	r3, r3, #2
 377 0022 1340     		ands	r3, r2
 378 0024 05D0     		beq	.L18
 509:Generated_Source\PSoC4/UART_1_UART.c ****         {
 510:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 379              		.loc 1 510 0
 380 0026 0023     		movs	r3, #0
 381 0028 7B60     		str	r3, [r7, #4]
 511:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 382              		.loc 1 511 0
 383 002a 044B     		ldr	r3, .L20
 384 002c D822     		movs	r2, #216
 385 002e 9200     		lsls	r2, r2, #2
 386 0030 1A60     		str	r2, [r3]
 387              	.L18:
 512:Generated_Source\PSoC4/UART_1_UART.c ****         }
 513:Generated_Source\PSoC4/UART_1_UART.c **** 
 514:Generated_Source\PSoC4/UART_1_UART.c ****         return (rxData);
 388              		.loc 1 514 0
 389 0032 7B68     		ldr	r3, [r7, #4]
 515:Generated_Source\PSoC4/UART_1_UART.c ****     }
 390              		.loc 1 515 0
 391 0034 1800     		movs	r0, r3
 392 0036 BD46     		mov	sp, r7
 393 0038 02B0     		add	sp, sp, #8
 394              		@ sp needed
 395 003a 80BD     		pop	{r7, pc}
 396              	.L21:
 397              		.align	2
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 17


 398              	.L20:
 399 003c C00F0740 		.word	1074204608
 400              		.cfi_endproc
 401              	.LFE5:
 402              		.size	UART_1_UartGetChar, .-UART_1_UartGetChar
 403              		.section	.text.UART_1_UartGetByte,"ax",%progbits
 404              		.align	2
 405              		.global	UART_1_UartGetByte
 406              		.code	16
 407              		.thumb_func
 408              		.type	UART_1_UartGetByte, %function
 409              	UART_1_UartGetByte:
 410              	.LFB6:
 516:Generated_Source\PSoC4/UART_1_UART.c **** 
 517:Generated_Source\PSoC4/UART_1_UART.c **** 
 518:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartGetByte
 520:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_1_UART.c ****     *
 522:Generated_Source\PSoC4/UART_1_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_1_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_1_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/UART_1_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_1_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_1_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_1_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_1_UART.c ****     *
 530:Generated_Source\PSoC4/UART_1_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_1_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_1_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_1_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_1_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_1_UART.c ****     *   - UART_1_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_1_UART.c ****     *
 540:Generated_Source\PSoC4/UART_1_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_1_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_1_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_1_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_1_UART.c ****     *   Check UART_1_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_1_UART.c ****     *
 547:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_1_UART.c ****     uint32 UART_1_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_1_UART.c ****     {
 411              		.loc 1 549 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 82B0     		sub	sp, sp, #8
 420              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 18


 421 0004 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 550:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_1_UART.c **** 
 553:Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_1_UART.c ****         {
 555:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_DisableInt();
 556:Generated_Source\PSoC4/UART_1_UART.c ****         }
 557:Generated_Source\PSoC4/UART_1_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_1_UART.c **** 
 559:Generated_Source\PSoC4/UART_1_UART.c ****         if (0u != UART_1_SpiUartGetRxBufferSize())
 423              		.loc 1 559 0
 424 0006 FFF7FEFF 		bl	UART_1_SpiUartGetRxBufferSize
 425 000a 031E     		subs	r3, r0, #0
 426 000c 04D0     		beq	.L23
 560:Generated_Source\PSoC4/UART_1_UART.c ****         {
 561:Generated_Source\PSoC4/UART_1_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_1_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_1_UART.c ****             */
 564:Generated_Source\PSoC4/UART_1_UART.c ****             #if (UART_1_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_1_UART.c ****             {
 566:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_EnableInt();
 567:Generated_Source\PSoC4/UART_1_UART.c ****             }
 568:Generated_Source\PSoC4/UART_1_UART.c ****             #endif
 569:Generated_Source\PSoC4/UART_1_UART.c **** 
 570:Generated_Source\PSoC4/UART_1_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_SpiUartReadRxData();
 427              		.loc 1 571 0
 428 000e FFF7FEFF 		bl	UART_1_SpiUartReadRxData
 429 0012 0300     		movs	r3, r0
 430 0014 7B60     		str	r3, [r7, #4]
 431 0016 02E0     		b	.L24
 432              	.L23:
 572:Generated_Source\PSoC4/UART_1_UART.c ****         }
 573:Generated_Source\PSoC4/UART_1_UART.c ****         else
 574:Generated_Source\PSoC4/UART_1_UART.c ****         {
 575:Generated_Source\PSoC4/UART_1_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_1_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_1_UART.c ****             */
 578:Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_RX_FIFO_RD_REG;
 433              		.loc 1 578 0
 434 0018 0B4B     		ldr	r3, .L26
 435 001a 1B68     		ldr	r3, [r3]
 436 001c 7B60     		str	r3, [r7, #4]
 437              	.L24:
 579:Generated_Source\PSoC4/UART_1_UART.c **** 
 580:Generated_Source\PSoC4/UART_1_UART.c **** 
 581:Generated_Source\PSoC4/UART_1_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_1_UART.c ****             #if (UART_1_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_1_UART.c ****             {
 584:Generated_Source\PSoC4/UART_1_UART.c **** 
 585:Generated_Source\PSoC4/UART_1_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_1_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/UART_1_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_ClearRxInterruptSource(UART_1_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_1_UART.c **** 
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 19


 590:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_EnableInt();
 591:Generated_Source\PSoC4/UART_1_UART.c ****             }
 592:Generated_Source\PSoC4/UART_1_UART.c ****             #endif
 593:Generated_Source\PSoC4/UART_1_UART.c ****         }
 594:Generated_Source\PSoC4/UART_1_UART.c **** 
 595:Generated_Source\PSoC4/UART_1_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_1_UART.c ****         tmpStatus = (UART_1_GetRxInterruptSource() & UART_1_INTR_RX_ERR);
 438              		.loc 1 596 0
 439 001e 0B4B     		ldr	r3, .L26+4
 440 0020 1A68     		ldr	r2, [r3]
 441 0022 D823     		movs	r3, #216
 442 0024 9B00     		lsls	r3, r3, #2
 443 0026 1340     		ands	r3, r2
 444 0028 3B60     		str	r3, [r7]
 597:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 445              		.loc 1 597 0
 446 002a 084B     		ldr	r3, .L26+4
 447 002c D822     		movs	r2, #216
 448 002e 9200     		lsls	r2, r2, #2
 449 0030 1A60     		str	r2, [r3]
 598:Generated_Source\PSoC4/UART_1_UART.c **** 
 599:Generated_Source\PSoC4/UART_1_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_1_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/UART_1_UART.c ****         */
 602:Generated_Source\PSoC4/UART_1_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 450              		.loc 1 602 0
 451 0032 3B68     		ldr	r3, [r7]
 452 0034 1B02     		lsls	r3, r3, #8
 453 0036 7A68     		ldr	r2, [r7, #4]
 454 0038 1343     		orrs	r3, r2
 455 003a 7B60     		str	r3, [r7, #4]
 603:Generated_Source\PSoC4/UART_1_UART.c **** 
 604:Generated_Source\PSoC4/UART_1_UART.c ****         return (rxData);
 456              		.loc 1 604 0
 457 003c 7B68     		ldr	r3, [r7, #4]
 605:Generated_Source\PSoC4/UART_1_UART.c ****     }
 458              		.loc 1 605 0
 459 003e 1800     		movs	r0, r3
 460 0040 BD46     		mov	sp, r7
 461 0042 02B0     		add	sp, sp, #8
 462              		@ sp needed
 463 0044 80BD     		pop	{r7, pc}
 464              	.L27:
 465 0046 C046     		.align	2
 466              	.L26:
 467 0048 40030740 		.word	1074201408
 468 004c C00F0740 		.word	1074204608
 469              		.cfi_endproc
 470              	.LFE6:
 471              		.size	UART_1_UartGetByte, .-UART_1_UartGetByte
 472              		.section	.text.UART_1_UartPutString,"ax",%progbits
 473              		.align	2
 474              		.global	UART_1_UartPutString
 475              		.code	16
 476              		.thumb_func
 477              		.type	UART_1_UartPutString, %function
 478              	UART_1_UartPutString:
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 20


 479              	.LFB7:
 606:Generated_Source\PSoC4/UART_1_UART.c **** 
 607:Generated_Source\PSoC4/UART_1_UART.c **** 
 608:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_1_UART.c ****         *
 613:Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_1_UART.c ****         *
 617:Generated_Source\PSoC4/UART_1_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_1_UART.c ****         *   - UART_1_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_1_UART.c ****         *   - UART_1_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_1_UART.c ****         *
 621:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_1_UART.c ****         {
 624:Generated_Source\PSoC4/UART_1_UART.c ****             if(0u != polarity)
 625:Generated_Source\PSoC4/UART_1_UART.c ****             {
 626:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG |= (uint32)  UART_1_UART_FLOW_CTRL_RTS_POLARITY;
 627:Generated_Source\PSoC4/UART_1_UART.c ****             }
 628:Generated_Source\PSoC4/UART_1_UART.c ****             else
 629:Generated_Source\PSoC4/UART_1_UART.c ****             {
 630:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG &= (uint32) ~UART_1_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_1_UART.c ****             }
 632:Generated_Source\PSoC4/UART_1_UART.c ****         }
 633:Generated_Source\PSoC4/UART_1_UART.c **** 
 634:Generated_Source\PSoC4/UART_1_UART.c **** 
 635:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_1_UART.c ****         *
 639:Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_1_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_1_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_1_UART.c ****         *
 645:Generated_Source\PSoC4/UART_1_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_1_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_1_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_1_UART.c ****         *
 649:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_1_UART.c ****         {
 652:Generated_Source\PSoC4/UART_1_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_1_UART.c **** 
 654:Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl = UART_1_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/UART_1_UART.c **** 
 656:Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_1_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level ma
 657:Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl |= ((uint32) (UART_1_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:Generated_Source\PSoC4/UART_1_UART.c **** 
 659:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/UART_1_UART.c ****         }
 661:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 21


 662:Generated_Source\PSoC4/UART_1_UART.c **** 
 663:Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_1_UART.c **** 
 665:Generated_Source\PSoC4/UART_1_UART.c **** 
 666:Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartPutString
 669:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_1_UART.c ****     *
 671:Generated_Source\PSoC4/UART_1_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_1_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_1_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_1_UART.c ****     *
 676:Generated_Source\PSoC4/UART_1_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_1_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_1_UART.c ****     *
 679:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_1_UART.c ****     {
 480              		.loc 1 681 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 16
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 0000 80B5     		push	{r7, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 84B0     		sub	sp, sp, #16
 489              		.cfi_def_cfa_offset 24
 490 0004 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
 492 0006 7860     		str	r0, [r7, #4]
 682:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_1_UART.c **** 
 684:Generated_Source\PSoC4/UART_1_UART.c ****         bufIndex = 0u;
 493              		.loc 1 684 0
 494 0008 0023     		movs	r3, #0
 495 000a FB60     		str	r3, [r7, #12]
 685:Generated_Source\PSoC4/UART_1_UART.c **** 
 686:Generated_Source\PSoC4/UART_1_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_1_UART.c ****         while(string[bufIndex] != ((char8) 0))
 496              		.loc 1 687 0
 497 000c 09E0     		b	.L29
 498              	.L30:
 688:Generated_Source\PSoC4/UART_1_UART.c ****         {
 689:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UartPutChar((uint32) string[bufIndex]);
 499              		.loc 1 689 0
 500 000e 7A68     		ldr	r2, [r7, #4]
 501 0010 FB68     		ldr	r3, [r7, #12]
 502 0012 D318     		adds	r3, r2, r3
 503 0014 1B78     		ldrb	r3, [r3]
 504 0016 1800     		movs	r0, r3
 505 0018 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 690:Generated_Source\PSoC4/UART_1_UART.c ****             bufIndex++;
 506              		.loc 1 690 0
 507 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 22


 508 001e 0133     		adds	r3, r3, #1
 509 0020 FB60     		str	r3, [r7, #12]
 510              	.L29:
 687:Generated_Source\PSoC4/UART_1_UART.c ****         {
 511              		.loc 1 687 0
 512 0022 7A68     		ldr	r2, [r7, #4]
 513 0024 FB68     		ldr	r3, [r7, #12]
 514 0026 D318     		adds	r3, r2, r3
 515 0028 1B78     		ldrb	r3, [r3]
 516 002a 002B     		cmp	r3, #0
 517 002c EFD1     		bne	.L30
 691:Generated_Source\PSoC4/UART_1_UART.c ****         }
 692:Generated_Source\PSoC4/UART_1_UART.c ****     }
 518              		.loc 1 692 0
 519 002e C046     		nop
 520 0030 BD46     		mov	sp, r7
 521 0032 04B0     		add	sp, sp, #16
 522              		@ sp needed
 523 0034 80BD     		pop	{r7, pc}
 524              		.cfi_endproc
 525              	.LFE7:
 526              		.size	UART_1_UartPutString, .-UART_1_UartPutString
 527 0036 C046     		.section	.text.UART_1_UartPutCRLF,"ax",%progbits
 528              		.align	2
 529              		.global	UART_1_UartPutCRLF
 530              		.code	16
 531              		.thumb_func
 532              		.type	UART_1_UartPutCRLF, %function
 533              	UART_1_UartPutCRLF:
 534              	.LFB8:
 693:Generated_Source\PSoC4/UART_1_UART.c **** 
 694:Generated_Source\PSoC4/UART_1_UART.c **** 
 695:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartPutCRLF
 697:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_1_UART.c ****     *
 699:Generated_Source\PSoC4/UART_1_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_1_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_1_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_1_UART.c ****     *
 704:Generated_Source\PSoC4/UART_1_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_1_UART.c ****     *
 706:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_1_UART.c ****     {
 535              		.loc 1 708 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 8
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 7, -8
 542              		.cfi_offset 14, -4
 543 0002 82B0     		sub	sp, sp, #8
 544              		.cfi_def_cfa_offset 16
 545 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 23


 546              		.cfi_def_cfa_register 7
 547 0006 7860     		str	r0, [r7, #4]
 709:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 548              		.loc 1 709 0
 549 0008 7B68     		ldr	r3, [r7, #4]
 550 000a 1800     		movs	r0, r3
 551 000c FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 710:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 552              		.loc 1 710 0
 553 0010 0D20     		movs	r0, #13
 554 0012 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 711:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 555              		.loc 1 711 0
 556 0016 0A20     		movs	r0, #10
 557 0018 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 712:Generated_Source\PSoC4/UART_1_UART.c ****     }
 558              		.loc 1 712 0
 559 001c C046     		nop
 560 001e BD46     		mov	sp, r7
 561 0020 02B0     		add	sp, sp, #8
 562              		@ sp needed
 563 0022 80BD     		pop	{r7, pc}
 564              		.cfi_endproc
 565              	.LFE8:
 566              		.size	UART_1_UartPutCRLF, .-UART_1_UartPutCRLF
 567              		.section	.text.UART_1_UartSendBreakBlocking,"ax",%progbits
 568              		.align	2
 569              		.global	UART_1_UartSendBreakBlocking
 570              		.code	16
 571              		.thumb_func
 572              		.type	UART_1_UartSendBreakBlocking, %function
 573              	UART_1_UartSendBreakBlocking:
 574              	.LFB9:
 713:Generated_Source\PSoC4/UART_1_UART.c **** 
 714:Generated_Source\PSoC4/UART_1_UART.c **** 
 715:Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1SCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/UART_1_UART.c ****         *
 720:Generated_Source\PSoC4/UART_1_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_1_UART.c ****         *
 724:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_1_UART.c ****         {
 727:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG |= (uint32)  UART_1_UART_FLOW_CTRL_CTS_ENABLE;
 728:Generated_Source\PSoC4/UART_1_UART.c ****         }
 729:Generated_Source\PSoC4/UART_1_UART.c **** 
 730:Generated_Source\PSoC4/UART_1_UART.c **** 
 731:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartDisableCts
 733:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_1_UART.c ****         *
 735:Generated_Source\PSoC4/UART_1_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 24


 737:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_1_UART.c ****         *
 739:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_1_UART.c ****         {
 742:Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG &= (uint32) ~UART_1_UART_FLOW_CTRL_CTS_ENABLE;
 743:Generated_Source\PSoC4/UART_1_UART.c ****         }
 744:Generated_Source\PSoC4/UART_1_UART.c **** 
 745:Generated_Source\PSoC4/UART_1_UART.c **** 
 746:Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_1_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_1_UART.c ****         *
 750:Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_1_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_1_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_1_UART.c ****         *
 754:Generated_Source\PSoC4/UART_1_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_1_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/UART_1_UART.c ****         *   - UART_1_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_1_UART.c ****         *   - UART_1_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/UART_1_UART.c ****         *
 759:Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_1_UART.c ****         {
 762:Generated_Source\PSoC4/UART_1_UART.c ****             if (0u != polarity)
 763:Generated_Source\PSoC4/UART_1_UART.c ****             {
 764:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG |= (uint32)  UART_1_UART_FLOW_CTRL_CTS_POLARITY;
 765:Generated_Source\PSoC4/UART_1_UART.c ****             }
 766:Generated_Source\PSoC4/UART_1_UART.c ****             else
 767:Generated_Source\PSoC4/UART_1_UART.c ****             {
 768:Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG &= (uint32) ~UART_1_UART_FLOW_CTRL_CTS_POLARITY;
 769:Generated_Source\PSoC4/UART_1_UART.c ****             }
 770:Generated_Source\PSoC4/UART_1_UART.c ****         }
 771:Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_1_UART.c **** 
 773:Generated_Source\PSoC4/UART_1_UART.c **** 
 774:Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_1_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_1_UART.c ****     *
 778:Generated_Source\PSoC4/UART_1_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_1_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_1_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_1_UART.c ****     *
 782:Generated_Source\PSoC4/UART_1_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_1_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_1_UART.c ****     *
 785:Generated_Source\PSoC4/UART_1_UART.c ****     * \note
 786:Generated_Source\PSoC4/UART_1_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_1_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_1_UART.c ****     *
 789:Generated_Source\PSoC4/UART_1_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_1_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_1_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_1_UART.c ****     *
 793:Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 25


 794:Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_1_UART.c ****     {
 575              		.loc 1 795 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 16
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0000 80B5     		push	{r7, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 84B0     		sub	sp, sp, #16
 584              		.cfi_def_cfa_offset 24
 585 0004 00AF     		add	r7, sp, #0
 586              		.cfi_def_cfa_register 7
 587 0006 7860     		str	r0, [r7, #4]
 796:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_1_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_1_UART.c **** 
 799:Generated_Source\PSoC4/UART_1_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_1_UART.c ****         txIntrReg = UART_1_GetTxInterruptMode();
 588              		.loc 1 800 0
 589 0008 174B     		ldr	r3, .L34
 590 000a 1B68     		ldr	r3, [r3]
 591 000c FB60     		str	r3, [r7, #12]
 801:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SetTxInterruptMode(0u);
 592              		.loc 1 801 0
 593 000e 164B     		ldr	r3, .L34
 594 0010 0022     		movs	r2, #0
 595 0012 1A60     		str	r2, [r3]
 802:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_ClearTxInterruptSource(UART_1_INTR_TX_UART_DONE);
 596              		.loc 1 802 0
 597 0014 154B     		ldr	r3, .L34+4
 598 0016 8022     		movs	r2, #128
 599 0018 9200     		lsls	r2, r2, #2
 600 001a 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/UART_1_UART.c **** 
 804:Generated_Source\PSoC4/UART_1_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_1_UART.c ****         txCtrlReg = UART_1_TX_CTRL_REG;
 601              		.loc 1 805 0
 602 001c 144B     		ldr	r3, .L34+8
 603 001e 1B68     		ldr	r3, [r3]
 604 0020 BB60     		str	r3, [r7, #8]
 806:Generated_Source\PSoC4/UART_1_UART.c **** 
 807:Generated_Source\PSoC4/UART_1_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_CTRL_REG = (UART_1_TX_CTRL_REG & (uint32) ~UART_1_TX_CTRL_DATA_WIDTH_MASK) |
 605              		.loc 1 808 0
 606 0022 134B     		ldr	r3, .L34+8
 607 0024 124A     		ldr	r2, .L34+8
 608 0026 1268     		ldr	r2, [r2]
 609 0028 0F21     		movs	r1, #15
 610 002a 8A43     		bics	r2, r1
 611 002c 1100     		movs	r1, r2
 809:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 612              		.loc 1 809 0
 613 002e 7A68     		ldr	r2, [r7, #4]
 614 0030 013A     		subs	r2, r2, #1
 615 0032 0F20     		movs	r0, #15
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 26


 616 0034 0240     		ands	r2, r0
 808:Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 617              		.loc 1 808 0
 618 0036 0A43     		orrs	r2, r1
 619 0038 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART_1_UART.c **** 
 811:Generated_Source\PSoC4/UART_1_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_FIFO_WR_REG = 0u;
 620              		.loc 1 812 0
 621 003a 0E4B     		ldr	r3, .L34+12
 622 003c 0022     		movs	r2, #0
 623 003e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC4/UART_1_UART.c **** 
 814:Generated_Source\PSoC4/UART_1_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_1_UART.c ****         while (0u == (UART_1_GetTxInterruptSource() & UART_1_INTR_TX_UART_DONE))
 624              		.loc 1 815 0
 625 0040 C046     		nop
 626              	.L33:
 627              		.loc 1 815 0 is_stmt 0 discriminator 1
 628 0042 0A4B     		ldr	r3, .L34+4
 629 0044 1A68     		ldr	r2, [r3]
 630 0046 8023     		movs	r3, #128
 631 0048 9B00     		lsls	r3, r3, #2
 632 004a 1340     		ands	r3, r2
 633 004c F9D0     		beq	.L33
 816:Generated_Source\PSoC4/UART_1_UART.c ****         {
 817:Generated_Source\PSoC4/UART_1_UART.c ****         }
 818:Generated_Source\PSoC4/UART_1_UART.c **** 
 819:Generated_Source\PSoC4/UART_1_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_ClearTxInterruptSource(UART_1_INTR_TX_ALL);
 634              		.loc 1 820 0 is_stmt 1
 635 004e 074B     		ldr	r3, .L34+4
 636 0050 094A     		ldr	r2, .L34+16
 637 0052 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/UART_1_UART.c **** 
 822:Generated_Source\PSoC4/UART_1_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_CTRL_REG = txCtrlReg;
 638              		.loc 1 823 0
 639 0054 064B     		ldr	r3, .L34+8
 640 0056 BA68     		ldr	r2, [r7, #8]
 641 0058 1A60     		str	r2, [r3]
 824:Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SetTxInterruptMode(txIntrReg);
 642              		.loc 1 824 0
 643 005a 034B     		ldr	r3, .L34
 644 005c FA68     		ldr	r2, [r7, #12]
 645 005e 1A60     		str	r2, [r3]
 825:Generated_Source\PSoC4/UART_1_UART.c ****     }
 646              		.loc 1 825 0
 647 0060 C046     		nop
 648 0062 BD46     		mov	sp, r7
 649 0064 04B0     		add	sp, sp, #16
 650              		@ sp needed
 651 0066 80BD     		pop	{r7, pc}
 652              	.L35:
 653              		.align	2
 654              	.L34:
 655 0068 880F0740 		.word	1074204552
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 27


 656 006c 800F0740 		.word	1074204544
 657 0070 00020740 		.word	1074201088
 658 0074 40020740 		.word	1074201152
 659 0078 F3070000 		.word	2035
 660              		.cfi_endproc
 661              	.LFE9:
 662              		.size	UART_1_UartSendBreakBlocking, .-UART_1_UartSendBreakBlocking
 663              		.text
 664              	.Letext0:
 665              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 666              		.file 3 "Generated_Source\\PSoC4\\UART_1_PVT.h"
 667              		.section	.debug_info,"",%progbits
 668              	.Ldebug_info0:
 669 0000 77020000 		.4byte	0x277
 670 0004 0400     		.2byte	0x4
 671 0006 00000000 		.4byte	.Ldebug_abbrev0
 672 000a 04       		.byte	0x4
 673 000b 01       		.uleb128 0x1
 674 000c 0C010000 		.4byte	.LASF39
 675 0010 0C       		.byte	0xc
 676 0011 A1010000 		.4byte	.LASF40
 677 0015 B9000000 		.4byte	.LASF41
 678 0019 00000000 		.4byte	.Ldebug_ranges0+0
 679 001d 00000000 		.4byte	0
 680 0021 00000000 		.4byte	.Ldebug_line0
 681 0025 02       		.uleb128 0x2
 682 0026 01       		.byte	0x1
 683 0027 06       		.byte	0x6
 684 0028 DE020000 		.4byte	.LASF0
 685 002c 02       		.uleb128 0x2
 686 002d 01       		.byte	0x1
 687 002e 08       		.byte	0x8
 688 002f 6E000000 		.4byte	.LASF1
 689 0033 02       		.uleb128 0x2
 690 0034 02       		.byte	0x2
 691 0035 05       		.byte	0x5
 692 0036 7F020000 		.4byte	.LASF2
 693 003a 02       		.uleb128 0x2
 694 003b 02       		.byte	0x2
 695 003c 07       		.byte	0x7
 696 003d A6000000 		.4byte	.LASF3
 697 0041 02       		.uleb128 0x2
 698 0042 04       		.byte	0x4
 699 0043 05       		.byte	0x5
 700 0044 B6020000 		.4byte	.LASF4
 701 0048 02       		.uleb128 0x2
 702 0049 04       		.byte	0x4
 703 004a 07       		.byte	0x7
 704 004b 94000000 		.4byte	.LASF5
 705 004f 02       		.uleb128 0x2
 706 0050 08       		.byte	0x8
 707 0051 05       		.byte	0x5
 708 0052 00000000 		.4byte	.LASF6
 709 0056 02       		.uleb128 0x2
 710 0057 08       		.byte	0x8
 711 0058 07       		.byte	0x7
 712 0059 1E020000 		.4byte	.LASF7
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 28


 713 005d 03       		.uleb128 0x3
 714 005e 04       		.byte	0x4
 715 005f 05       		.byte	0x5
 716 0060 696E7400 		.ascii	"int\000"
 717 0064 02       		.uleb128 0x2
 718 0065 04       		.byte	0x4
 719 0066 07       		.byte	0x7
 720 0067 09020000 		.4byte	.LASF8
 721 006b 04       		.uleb128 0x4
 722 006c E3010000 		.4byte	.LASF9
 723 0070 02       		.byte	0x2
 724 0071 E501     		.2byte	0x1e5
 725 0073 3A000000 		.4byte	0x3a
 726 0077 04       		.uleb128 0x4
 727 0078 02020000 		.4byte	.LASF10
 728 007c 02       		.byte	0x2
 729 007d E601     		.2byte	0x1e6
 730 007f 48000000 		.4byte	0x48
 731 0083 02       		.uleb128 0x2
 732 0084 04       		.byte	0x4
 733 0085 04       		.byte	0x4
 734 0086 5E000000 		.4byte	.LASF11
 735 008a 02       		.uleb128 0x2
 736 008b 08       		.byte	0x8
 737 008c 04       		.byte	0x4
 738 008d C6010000 		.4byte	.LASF12
 739 0091 04       		.uleb128 0x4
 740 0092 8E000000 		.4byte	.LASF13
 741 0096 02       		.byte	0x2
 742 0097 F501     		.2byte	0x1f5
 743 0099 9D000000 		.4byte	0x9d
 744 009d 02       		.uleb128 0x2
 745 009e 01       		.byte	0x1
 746 009f 08       		.byte	0x8
 747 00a0 7A020000 		.4byte	.LASF14
 748 00a4 04       		.uleb128 0x4
 749 00a5 0E000000 		.4byte	.LASF15
 750 00a9 02       		.byte	0x2
 751 00aa 9002     		.2byte	0x290
 752 00ac B0000000 		.4byte	0xb0
 753 00b0 05       		.uleb128 0x5
 754 00b1 77000000 		.4byte	0x77
 755 00b5 02       		.uleb128 0x2
 756 00b6 08       		.byte	0x8
 757 00b7 04       		.byte	0x4
 758 00b8 D2020000 		.4byte	.LASF16
 759 00bc 02       		.uleb128 0x2
 760 00bd 04       		.byte	0x4
 761 00be 07       		.byte	0x7
 762 00bf 66020000 		.4byte	.LASF17
 763 00c3 06       		.uleb128 0x6
 764 00c4 A6020000 		.4byte	.LASF18
 765 00c8 01       		.byte	0x1
 766 00c9 F7       		.byte	0xf7
 767 00ca 00000000 		.4byte	.LFB0
 768 00ce BC000000 		.4byte	.LFE0-.LFB0
 769 00d2 01       		.uleb128 0x1
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 29


 770 00d3 9C       		.byte	0x9c
 771 00d4 07       		.uleb128 0x7
 772 00d5 CD010000 		.4byte	.LASF19
 773 00d9 01       		.byte	0x1
 774 00da 3D01     		.2byte	0x13d
 775 00dc 00000000 		.4byte	.LFB1
 776 00e0 34000000 		.4byte	.LFE1-.LFB1
 777 00e4 01       		.uleb128 0x1
 778 00e5 9C       		.byte	0x9c
 779 00e6 07       		.uleb128 0x7
 780 00e7 3C000000 		.4byte	.LASF20
 781 00eb 01       		.byte	0x1
 782 00ec 7101     		.2byte	0x171
 783 00ee 00000000 		.4byte	.LFB2
 784 00f2 38000000 		.4byte	.LFE2-.LFB2
 785 00f6 01       		.uleb128 0x1
 786 00f7 9C       		.byte	0x9c
 787 00f8 08       		.uleb128 0x8
 788 00f9 EA010000 		.4byte	.LASF21
 789 00fd 01       		.byte	0x1
 790 00fe B101     		.2byte	0x1b1
 791 0100 00000000 		.4byte	.LFB3
 792 0104 34000000 		.4byte	.LFE3-.LFB3
 793 0108 01       		.uleb128 0x1
 794 0109 9C       		.byte	0x9c
 795 010a 2D010000 		.4byte	0x12d
 796 010e 09       		.uleb128 0x9
 797 010f 16020000 		.4byte	.LASF23
 798 0113 01       		.byte	0x1
 799 0114 B101     		.2byte	0x1b1
 800 0116 77000000 		.4byte	0x77
 801 011a 02       		.uleb128 0x2
 802 011b 91       		.byte	0x91
 803 011c 6C       		.sleb128 -20
 804 011d 0A       		.uleb128 0xa
 805 011e C9020000 		.4byte	.LASF25
 806 0122 01       		.byte	0x1
 807 0123 B301     		.2byte	0x1b3
 808 0125 77000000 		.4byte	0x77
 809 0129 02       		.uleb128 0x2
 810 012a 91       		.byte	0x91
 811 012b 74       		.sleb128 -12
 812 012c 00       		.byte	0
 813 012d 08       		.uleb128 0x8
 814 012e 4A020000 		.4byte	.LASF22
 815 0132 01       		.byte	0x1
 816 0133 CA01     		.2byte	0x1ca
 817 0135 00000000 		.4byte	.LFB4
 818 0139 38000000 		.4byte	.LFE4-.LFB4
 819 013d 01       		.uleb128 0x1
 820 013e 9C       		.byte	0x9c
 821 013f 62010000 		.4byte	0x162
 822 0143 09       		.uleb128 0x9
 823 0144 35020000 		.4byte	.LASF24
 824 0148 01       		.byte	0x1
 825 0149 CA01     		.2byte	0x1ca
 826 014b 77000000 		.4byte	0x77
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 30


 827 014f 02       		.uleb128 0x2
 828 0150 91       		.byte	0x91
 829 0151 6C       		.sleb128 -20
 830 0152 0A       		.uleb128 0xa
 831 0153 C9020000 		.4byte	.LASF25
 832 0157 01       		.byte	0x1
 833 0158 CC01     		.2byte	0x1cc
 834 015a 77000000 		.4byte	0x77
 835 015e 02       		.uleb128 0x2
 836 015f 91       		.byte	0x91
 837 0160 74       		.sleb128 -12
 838 0161 00       		.byte	0
 839 0162 0B       		.uleb128 0xb
 840 0163 F9000000 		.4byte	.LASF27
 841 0167 01       		.byte	0x1
 842 0168 F201     		.2byte	0x1f2
 843 016a 77000000 		.4byte	0x77
 844 016e 00000000 		.4byte	.LFB5
 845 0172 40000000 		.4byte	.LFE5-.LFB5
 846 0176 01       		.uleb128 0x1
 847 0177 9C       		.byte	0x9c
 848 0178 8C010000 		.4byte	0x18c
 849 017c 0A       		.uleb128 0xa
 850 017d 9A010000 		.4byte	.LASF26
 851 0181 01       		.byte	0x1
 852 0182 F401     		.2byte	0x1f4
 853 0184 77000000 		.4byte	0x77
 854 0188 02       		.uleb128 0x2
 855 0189 91       		.byte	0x91
 856 018a 74       		.sleb128 -12
 857 018b 00       		.byte	0
 858 018c 0B       		.uleb128 0xb
 859 018d F4020000 		.4byte	.LASF28
 860 0191 01       		.byte	0x1
 861 0192 2402     		.2byte	0x224
 862 0194 77000000 		.4byte	0x77
 863 0198 00000000 		.4byte	.LFB6
 864 019c 50000000 		.4byte	.LFE6-.LFB6
 865 01a0 01       		.uleb128 0x1
 866 01a1 9C       		.byte	0x9c
 867 01a2 C5010000 		.4byte	0x1c5
 868 01a6 0A       		.uleb128 0xa
 869 01a7 9A010000 		.4byte	.LASF26
 870 01ab 01       		.byte	0x1
 871 01ac 2602     		.2byte	0x226
 872 01ae 77000000 		.4byte	0x77
 873 01b2 02       		.uleb128 0x2
 874 01b3 91       		.byte	0x91
 875 01b4 74       		.sleb128 -12
 876 01b5 0A       		.uleb128 0xa
 877 01b6 BF020000 		.4byte	.LASF29
 878 01ba 01       		.byte	0x1
 879 01bb 2702     		.2byte	0x227
 880 01bd 77000000 		.4byte	0x77
 881 01c1 02       		.uleb128 0x2
 882 01c2 91       		.byte	0x91
 883 01c3 70       		.sleb128 -16
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 31


 884 01c4 00       		.byte	0
 885 01c5 0C       		.uleb128 0xc
 886 01c6 27000000 		.4byte	.LASF30
 887 01ca 01       		.byte	0x1
 888 01cb A802     		.2byte	0x2a8
 889 01cd 00000000 		.4byte	.LFB7
 890 01d1 36000000 		.4byte	.LFE7-.LFB7
 891 01d5 01       		.uleb128 0x1
 892 01d6 9C       		.byte	0x9c
 893 01d7 FA010000 		.4byte	0x1fa
 894 01db 09       		.uleb128 0x9
 895 01dc 4C000000 		.4byte	.LASF31
 896 01e0 01       		.byte	0x1
 897 01e1 A802     		.2byte	0x2a8
 898 01e3 FA010000 		.4byte	0x1fa
 899 01e7 02       		.uleb128 0x2
 900 01e8 91       		.byte	0x91
 901 01e9 6C       		.sleb128 -20
 902 01ea 0A       		.uleb128 0xa
 903 01eb 41020000 		.4byte	.LASF32
 904 01ef 01       		.byte	0x1
 905 01f0 AA02     		.2byte	0x2aa
 906 01f2 77000000 		.4byte	0x77
 907 01f6 02       		.uleb128 0x2
 908 01f7 91       		.byte	0x91
 909 01f8 74       		.sleb128 -12
 910 01f9 00       		.byte	0
 911 01fa 0D       		.uleb128 0xd
 912 01fb 04       		.byte	0x4
 913 01fc 00020000 		.4byte	0x200
 914 0200 0E       		.uleb128 0xe
 915 0201 91000000 		.4byte	0x91
 916 0205 0C       		.uleb128 0xc
 917 0206 14000000 		.4byte	.LASF33
 918 020a 01       		.byte	0x1
 919 020b C302     		.2byte	0x2c3
 920 020d 00000000 		.4byte	.LFB8
 921 0211 24000000 		.4byte	.LFE8-.LFB8
 922 0215 01       		.uleb128 0x1
 923 0216 9C       		.byte	0x9c
 924 0217 2B020000 		.4byte	0x22b
 925 021b 09       		.uleb128 0x9
 926 021c 6F020000 		.4byte	.LASF34
 927 0220 01       		.byte	0x1
 928 0221 C302     		.2byte	0x2c3
 929 0223 77000000 		.4byte	0x77
 930 0227 02       		.uleb128 0x2
 931 0228 91       		.byte	0x91
 932 0229 74       		.sleb128 -12
 933 022a 00       		.byte	0
 934 022b 08       		.uleb128 0x8
 935 022c 89020000 		.4byte	.LASF35
 936 0230 01       		.byte	0x1
 937 0231 1A03     		.2byte	0x31a
 938 0233 00000000 		.4byte	.LFB9
 939 0237 7C000000 		.4byte	.LFE9-.LFB9
 940 023b 01       		.uleb128 0x1
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 32


 941 023c 9C       		.byte	0x9c
 942 023d 6F020000 		.4byte	0x26f
 943 0241 09       		.uleb128 0x9
 944 0242 53000000 		.4byte	.LASF36
 945 0246 01       		.byte	0x1
 946 0247 1A03     		.2byte	0x31a
 947 0249 77000000 		.4byte	0x77
 948 024d 02       		.uleb128 0x2
 949 024e 91       		.byte	0x91
 950 024f 6C       		.sleb128 -20
 951 0250 0A       		.uleb128 0xa
 952 0251 EA020000 		.4byte	.LASF37
 953 0255 01       		.byte	0x1
 954 0256 1C03     		.2byte	0x31c
 955 0258 77000000 		.4byte	0x77
 956 025c 02       		.uleb128 0x2
 957 025d 91       		.byte	0x91
 958 025e 70       		.sleb128 -16
 959 025f 0A       		.uleb128 0xa
 960 0260 64000000 		.4byte	.LASF38
 961 0264 01       		.byte	0x1
 962 0265 1D03     		.2byte	0x31d
 963 0267 77000000 		.4byte	0x77
 964 026b 02       		.uleb128 0x2
 965 026c 91       		.byte	0x91
 966 026d 74       		.sleb128 -12
 967 026e 00       		.byte	0
 968 026f 0F       		.uleb128 0xf
 969 0270 7C000000 		.4byte	.LASF42
 970 0274 03       		.byte	0x3
 971 0275 5B       		.byte	0x5b
 972 0276 6B000000 		.4byte	0x6b
 973 027a 00       		.byte	0
 974              		.section	.debug_abbrev,"",%progbits
 975              	.Ldebug_abbrev0:
 976 0000 01       		.uleb128 0x1
 977 0001 11       		.uleb128 0x11
 978 0002 01       		.byte	0x1
 979 0003 25       		.uleb128 0x25
 980 0004 0E       		.uleb128 0xe
 981 0005 13       		.uleb128 0x13
 982 0006 0B       		.uleb128 0xb
 983 0007 03       		.uleb128 0x3
 984 0008 0E       		.uleb128 0xe
 985 0009 1B       		.uleb128 0x1b
 986 000a 0E       		.uleb128 0xe
 987 000b 55       		.uleb128 0x55
 988 000c 17       		.uleb128 0x17
 989 000d 11       		.uleb128 0x11
 990 000e 01       		.uleb128 0x1
 991 000f 10       		.uleb128 0x10
 992 0010 17       		.uleb128 0x17
 993 0011 00       		.byte	0
 994 0012 00       		.byte	0
 995 0013 02       		.uleb128 0x2
 996 0014 24       		.uleb128 0x24
 997 0015 00       		.byte	0
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 33


 998 0016 0B       		.uleb128 0xb
 999 0017 0B       		.uleb128 0xb
 1000 0018 3E       		.uleb128 0x3e
 1001 0019 0B       		.uleb128 0xb
 1002 001a 03       		.uleb128 0x3
 1003 001b 0E       		.uleb128 0xe
 1004 001c 00       		.byte	0
 1005 001d 00       		.byte	0
 1006 001e 03       		.uleb128 0x3
 1007 001f 24       		.uleb128 0x24
 1008 0020 00       		.byte	0
 1009 0021 0B       		.uleb128 0xb
 1010 0022 0B       		.uleb128 0xb
 1011 0023 3E       		.uleb128 0x3e
 1012 0024 0B       		.uleb128 0xb
 1013 0025 03       		.uleb128 0x3
 1014 0026 08       		.uleb128 0x8
 1015 0027 00       		.byte	0
 1016 0028 00       		.byte	0
 1017 0029 04       		.uleb128 0x4
 1018 002a 16       		.uleb128 0x16
 1019 002b 00       		.byte	0
 1020 002c 03       		.uleb128 0x3
 1021 002d 0E       		.uleb128 0xe
 1022 002e 3A       		.uleb128 0x3a
 1023 002f 0B       		.uleb128 0xb
 1024 0030 3B       		.uleb128 0x3b
 1025 0031 05       		.uleb128 0x5
 1026 0032 49       		.uleb128 0x49
 1027 0033 13       		.uleb128 0x13
 1028 0034 00       		.byte	0
 1029 0035 00       		.byte	0
 1030 0036 05       		.uleb128 0x5
 1031 0037 35       		.uleb128 0x35
 1032 0038 00       		.byte	0
 1033 0039 49       		.uleb128 0x49
 1034 003a 13       		.uleb128 0x13
 1035 003b 00       		.byte	0
 1036 003c 00       		.byte	0
 1037 003d 06       		.uleb128 0x6
 1038 003e 2E       		.uleb128 0x2e
 1039 003f 00       		.byte	0
 1040 0040 3F       		.uleb128 0x3f
 1041 0041 19       		.uleb128 0x19
 1042 0042 03       		.uleb128 0x3
 1043 0043 0E       		.uleb128 0xe
 1044 0044 3A       		.uleb128 0x3a
 1045 0045 0B       		.uleb128 0xb
 1046 0046 3B       		.uleb128 0x3b
 1047 0047 0B       		.uleb128 0xb
 1048 0048 27       		.uleb128 0x27
 1049 0049 19       		.uleb128 0x19
 1050 004a 11       		.uleb128 0x11
 1051 004b 01       		.uleb128 0x1
 1052 004c 12       		.uleb128 0x12
 1053 004d 06       		.uleb128 0x6
 1054 004e 40       		.uleb128 0x40
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 34


 1055 004f 18       		.uleb128 0x18
 1056 0050 9742     		.uleb128 0x2117
 1057 0052 19       		.uleb128 0x19
 1058 0053 00       		.byte	0
 1059 0054 00       		.byte	0
 1060 0055 07       		.uleb128 0x7
 1061 0056 2E       		.uleb128 0x2e
 1062 0057 00       		.byte	0
 1063 0058 3F       		.uleb128 0x3f
 1064 0059 19       		.uleb128 0x19
 1065 005a 03       		.uleb128 0x3
 1066 005b 0E       		.uleb128 0xe
 1067 005c 3A       		.uleb128 0x3a
 1068 005d 0B       		.uleb128 0xb
 1069 005e 3B       		.uleb128 0x3b
 1070 005f 05       		.uleb128 0x5
 1071 0060 27       		.uleb128 0x27
 1072 0061 19       		.uleb128 0x19
 1073 0062 11       		.uleb128 0x11
 1074 0063 01       		.uleb128 0x1
 1075 0064 12       		.uleb128 0x12
 1076 0065 06       		.uleb128 0x6
 1077 0066 40       		.uleb128 0x40
 1078 0067 18       		.uleb128 0x18
 1079 0068 9742     		.uleb128 0x2117
 1080 006a 19       		.uleb128 0x19
 1081 006b 00       		.byte	0
 1082 006c 00       		.byte	0
 1083 006d 08       		.uleb128 0x8
 1084 006e 2E       		.uleb128 0x2e
 1085 006f 01       		.byte	0x1
 1086 0070 3F       		.uleb128 0x3f
 1087 0071 19       		.uleb128 0x19
 1088 0072 03       		.uleb128 0x3
 1089 0073 0E       		.uleb128 0xe
 1090 0074 3A       		.uleb128 0x3a
 1091 0075 0B       		.uleb128 0xb
 1092 0076 3B       		.uleb128 0x3b
 1093 0077 05       		.uleb128 0x5
 1094 0078 27       		.uleb128 0x27
 1095 0079 19       		.uleb128 0x19
 1096 007a 11       		.uleb128 0x11
 1097 007b 01       		.uleb128 0x1
 1098 007c 12       		.uleb128 0x12
 1099 007d 06       		.uleb128 0x6
 1100 007e 40       		.uleb128 0x40
 1101 007f 18       		.uleb128 0x18
 1102 0080 9742     		.uleb128 0x2117
 1103 0082 19       		.uleb128 0x19
 1104 0083 01       		.uleb128 0x1
 1105 0084 13       		.uleb128 0x13
 1106 0085 00       		.byte	0
 1107 0086 00       		.byte	0
 1108 0087 09       		.uleb128 0x9
 1109 0088 05       		.uleb128 0x5
 1110 0089 00       		.byte	0
 1111 008a 03       		.uleb128 0x3
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 35


 1112 008b 0E       		.uleb128 0xe
 1113 008c 3A       		.uleb128 0x3a
 1114 008d 0B       		.uleb128 0xb
 1115 008e 3B       		.uleb128 0x3b
 1116 008f 05       		.uleb128 0x5
 1117 0090 49       		.uleb128 0x49
 1118 0091 13       		.uleb128 0x13
 1119 0092 02       		.uleb128 0x2
 1120 0093 18       		.uleb128 0x18
 1121 0094 00       		.byte	0
 1122 0095 00       		.byte	0
 1123 0096 0A       		.uleb128 0xa
 1124 0097 34       		.uleb128 0x34
 1125 0098 00       		.byte	0
 1126 0099 03       		.uleb128 0x3
 1127 009a 0E       		.uleb128 0xe
 1128 009b 3A       		.uleb128 0x3a
 1129 009c 0B       		.uleb128 0xb
 1130 009d 3B       		.uleb128 0x3b
 1131 009e 05       		.uleb128 0x5
 1132 009f 49       		.uleb128 0x49
 1133 00a0 13       		.uleb128 0x13
 1134 00a1 02       		.uleb128 0x2
 1135 00a2 18       		.uleb128 0x18
 1136 00a3 00       		.byte	0
 1137 00a4 00       		.byte	0
 1138 00a5 0B       		.uleb128 0xb
 1139 00a6 2E       		.uleb128 0x2e
 1140 00a7 01       		.byte	0x1
 1141 00a8 3F       		.uleb128 0x3f
 1142 00a9 19       		.uleb128 0x19
 1143 00aa 03       		.uleb128 0x3
 1144 00ab 0E       		.uleb128 0xe
 1145 00ac 3A       		.uleb128 0x3a
 1146 00ad 0B       		.uleb128 0xb
 1147 00ae 3B       		.uleb128 0x3b
 1148 00af 05       		.uleb128 0x5
 1149 00b0 27       		.uleb128 0x27
 1150 00b1 19       		.uleb128 0x19
 1151 00b2 49       		.uleb128 0x49
 1152 00b3 13       		.uleb128 0x13
 1153 00b4 11       		.uleb128 0x11
 1154 00b5 01       		.uleb128 0x1
 1155 00b6 12       		.uleb128 0x12
 1156 00b7 06       		.uleb128 0x6
 1157 00b8 40       		.uleb128 0x40
 1158 00b9 18       		.uleb128 0x18
 1159 00ba 9642     		.uleb128 0x2116
 1160 00bc 19       		.uleb128 0x19
 1161 00bd 01       		.uleb128 0x1
 1162 00be 13       		.uleb128 0x13
 1163 00bf 00       		.byte	0
 1164 00c0 00       		.byte	0
 1165 00c1 0C       		.uleb128 0xc
 1166 00c2 2E       		.uleb128 0x2e
 1167 00c3 01       		.byte	0x1
 1168 00c4 3F       		.uleb128 0x3f
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 36


 1169 00c5 19       		.uleb128 0x19
 1170 00c6 03       		.uleb128 0x3
 1171 00c7 0E       		.uleb128 0xe
 1172 00c8 3A       		.uleb128 0x3a
 1173 00c9 0B       		.uleb128 0xb
 1174 00ca 3B       		.uleb128 0x3b
 1175 00cb 05       		.uleb128 0x5
 1176 00cc 27       		.uleb128 0x27
 1177 00cd 19       		.uleb128 0x19
 1178 00ce 11       		.uleb128 0x11
 1179 00cf 01       		.uleb128 0x1
 1180 00d0 12       		.uleb128 0x12
 1181 00d1 06       		.uleb128 0x6
 1182 00d2 40       		.uleb128 0x40
 1183 00d3 18       		.uleb128 0x18
 1184 00d4 9642     		.uleb128 0x2116
 1185 00d6 19       		.uleb128 0x19
 1186 00d7 01       		.uleb128 0x1
 1187 00d8 13       		.uleb128 0x13
 1188 00d9 00       		.byte	0
 1189 00da 00       		.byte	0
 1190 00db 0D       		.uleb128 0xd
 1191 00dc 0F       		.uleb128 0xf
 1192 00dd 00       		.byte	0
 1193 00de 0B       		.uleb128 0xb
 1194 00df 0B       		.uleb128 0xb
 1195 00e0 49       		.uleb128 0x49
 1196 00e1 13       		.uleb128 0x13
 1197 00e2 00       		.byte	0
 1198 00e3 00       		.byte	0
 1199 00e4 0E       		.uleb128 0xe
 1200 00e5 26       		.uleb128 0x26
 1201 00e6 00       		.byte	0
 1202 00e7 49       		.uleb128 0x49
 1203 00e8 13       		.uleb128 0x13
 1204 00e9 00       		.byte	0
 1205 00ea 00       		.byte	0
 1206 00eb 0F       		.uleb128 0xf
 1207 00ec 34       		.uleb128 0x34
 1208 00ed 00       		.byte	0
 1209 00ee 03       		.uleb128 0x3
 1210 00ef 0E       		.uleb128 0xe
 1211 00f0 3A       		.uleb128 0x3a
 1212 00f1 0B       		.uleb128 0xb
 1213 00f2 3B       		.uleb128 0x3b
 1214 00f3 0B       		.uleb128 0xb
 1215 00f4 49       		.uleb128 0x49
 1216 00f5 13       		.uleb128 0x13
 1217 00f6 3F       		.uleb128 0x3f
 1218 00f7 19       		.uleb128 0x19
 1219 00f8 3C       		.uleb128 0x3c
 1220 00f9 19       		.uleb128 0x19
 1221 00fa 00       		.byte	0
 1222 00fb 00       		.byte	0
 1223 00fc 00       		.byte	0
 1224              		.section	.debug_aranges,"",%progbits
 1225 0000 64000000 		.4byte	0x64
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 37


 1226 0004 0200     		.2byte	0x2
 1227 0006 00000000 		.4byte	.Ldebug_info0
 1228 000a 04       		.byte	0x4
 1229 000b 00       		.byte	0
 1230 000c 0000     		.2byte	0
 1231 000e 0000     		.2byte	0
 1232 0010 00000000 		.4byte	.LFB0
 1233 0014 BC000000 		.4byte	.LFE0-.LFB0
 1234 0018 00000000 		.4byte	.LFB1
 1235 001c 34000000 		.4byte	.LFE1-.LFB1
 1236 0020 00000000 		.4byte	.LFB2
 1237 0024 38000000 		.4byte	.LFE2-.LFB2
 1238 0028 00000000 		.4byte	.LFB3
 1239 002c 34000000 		.4byte	.LFE3-.LFB3
 1240 0030 00000000 		.4byte	.LFB4
 1241 0034 38000000 		.4byte	.LFE4-.LFB4
 1242 0038 00000000 		.4byte	.LFB5
 1243 003c 40000000 		.4byte	.LFE5-.LFB5
 1244 0040 00000000 		.4byte	.LFB6
 1245 0044 50000000 		.4byte	.LFE6-.LFB6
 1246 0048 00000000 		.4byte	.LFB7
 1247 004c 36000000 		.4byte	.LFE7-.LFB7
 1248 0050 00000000 		.4byte	.LFB8
 1249 0054 24000000 		.4byte	.LFE8-.LFB8
 1250 0058 00000000 		.4byte	.LFB9
 1251 005c 7C000000 		.4byte	.LFE9-.LFB9
 1252 0060 00000000 		.4byte	0
 1253 0064 00000000 		.4byte	0
 1254              		.section	.debug_ranges,"",%progbits
 1255              	.Ldebug_ranges0:
 1256 0000 00000000 		.4byte	.LFB0
 1257 0004 BC000000 		.4byte	.LFE0
 1258 0008 00000000 		.4byte	.LFB1
 1259 000c 34000000 		.4byte	.LFE1
 1260 0010 00000000 		.4byte	.LFB2
 1261 0014 38000000 		.4byte	.LFE2
 1262 0018 00000000 		.4byte	.LFB3
 1263 001c 34000000 		.4byte	.LFE3
 1264 0020 00000000 		.4byte	.LFB4
 1265 0024 38000000 		.4byte	.LFE4
 1266 0028 00000000 		.4byte	.LFB5
 1267 002c 40000000 		.4byte	.LFE5
 1268 0030 00000000 		.4byte	.LFB6
 1269 0034 50000000 		.4byte	.LFE6
 1270 0038 00000000 		.4byte	.LFB7
 1271 003c 36000000 		.4byte	.LFE7
 1272 0040 00000000 		.4byte	.LFB8
 1273 0044 24000000 		.4byte	.LFE8
 1274 0048 00000000 		.4byte	.LFB9
 1275 004c 7C000000 		.4byte	.LFE9
 1276 0050 00000000 		.4byte	0
 1277 0054 00000000 		.4byte	0
 1278              		.section	.debug_line,"",%progbits
 1279              	.Ldebug_line0:
 1280 0000 5F010000 		.section	.debug_str,"MS",%progbits,1
 1280      02005800 
 1280      00000201 
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 38


 1280      FB0E0D00 
 1280      01010101 
 1281              	.LASF6:
 1282 0000 6C6F6E67 		.ascii	"long long int\000"
 1282      206C6F6E 
 1282      6720696E 
 1282      7400
 1283              	.LASF15:
 1284 000e 72656733 		.ascii	"reg32\000"
 1284      3200
 1285              	.LASF33:
 1286 0014 55415254 		.ascii	"UART_1_UartPutCRLF\000"
 1286      5F315F55 
 1286      61727450 
 1286      75744352 
 1286      4C4600
 1287              	.LASF30:
 1288 0027 55415254 		.ascii	"UART_1_UartPutString\000"
 1288      5F315F55 
 1288      61727450 
 1288      75745374 
 1288      72696E67 
 1289              	.LASF20:
 1290 003c 55415254 		.ascii	"UART_1_UartStop\000"
 1290      5F315F55 
 1290      61727453 
 1290      746F7000 
 1291              	.LASF31:
 1292 004c 73747269 		.ascii	"string\000"
 1292      6E6700
 1293              	.LASF36:
 1294 0053 62726561 		.ascii	"breakWidth\000"
 1294      6B576964 
 1294      746800
 1295              	.LASF11:
 1296 005e 666C6F61 		.ascii	"float\000"
 1296      7400
 1297              	.LASF38:
 1298 0064 7478496E 		.ascii	"txIntrReg\000"
 1298      74725265 
 1298      6700
 1299              	.LASF1:
 1300 006e 756E7369 		.ascii	"unsigned char\000"
 1300      676E6564 
 1300      20636861 
 1300      7200
 1301              	.LASF42:
 1302 007c 55415254 		.ascii	"UART_1_IntrTxMask\000"
 1302      5F315F49 
 1302      6E747254 
 1302      784D6173 
 1302      6B00
 1303              	.LASF13:
 1304 008e 63686172 		.ascii	"char8\000"
 1304      3800
 1305              	.LASF5:
 1306 0094 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 39


 1306      20756E73 
 1306      69676E65 
 1306      6420696E 
 1306      7400
 1307              	.LASF3:
 1308 00a6 73686F72 		.ascii	"short unsigned int\000"
 1308      7420756E 
 1308      7369676E 
 1308      65642069 
 1308      6E7400
 1309              	.LASF41:
 1310 00b9 433A5C55 		.ascii	"C:\\Users\\11800025\\Documents\\PSoC Creator\\I2Cte"
 1310      73657273 
 1310      5C313138 
 1310      30303032 
 1310      355C446F 
 1311 00e7 6D705C44 		.ascii	"mp\\Design01.cydsn\000"
 1311      65736967 
 1311      6E30312E 
 1311      63796473 
 1311      6E00
 1312              	.LASF27:
 1313 00f9 55415254 		.ascii	"UART_1_UartGetChar\000"
 1313      5F315F55 
 1313      61727447 
 1313      65744368 
 1313      617200
 1314              	.LASF39:
 1315 010c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1315      43313120 
 1315      352E342E 
 1315      31203230 
 1315      31363036 
 1316 013f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1316      20726576 
 1316      6973696F 
 1316      6E203233 
 1316      37373135 
 1317 0172 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1317      66756E63 
 1317      74696F6E 
 1317      2D736563 
 1317      74696F6E 
 1318              	.LASF26:
 1319 019a 72784461 		.ascii	"rxData\000"
 1319      746100
 1320              	.LASF40:
 1321 01a1 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1_UART.c\000"
 1321      72617465 
 1321      645F536F 
 1321      75726365 
 1321      5C50536F 
 1322              	.LASF12:
 1323 01c6 646F7562 		.ascii	"double\000"
 1323      6C6500
 1324              	.LASF19:
 1325 01cd 55415254 		.ascii	"UART_1_UartPostEnable\000"
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 40


 1325      5F315F55 
 1325      61727450 
 1325      6F737445 
 1325      6E61626C 
 1326              	.LASF9:
 1327 01e3 75696E74 		.ascii	"uint16\000"
 1327      313600
 1328              	.LASF21:
 1329 01ea 55415254 		.ascii	"UART_1_UartSetRxAddress\000"
 1329      5F315F55 
 1329      61727453 
 1329      65745278 
 1329      41646472 
 1330              	.LASF10:
 1331 0202 75696E74 		.ascii	"uint32\000"
 1331      333200
 1332              	.LASF8:
 1333 0209 756E7369 		.ascii	"unsigned int\000"
 1333      676E6564 
 1333      20696E74 
 1333      00
 1334              	.LASF23:
 1335 0216 61646472 		.ascii	"address\000"
 1335      65737300 
 1336              	.LASF7:
 1337 021e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1337      206C6F6E 
 1337      6720756E 
 1337      7369676E 
 1337      65642069 
 1338              	.LASF24:
 1339 0235 61646472 		.ascii	"addressMask\000"
 1339      6573734D 
 1339      61736B00 
 1340              	.LASF32:
 1341 0241 62756649 		.ascii	"bufIndex\000"
 1341      6E646578 
 1341      00
 1342              	.LASF22:
 1343 024a 55415254 		.ascii	"UART_1_UartSetRxAddressMask\000"
 1343      5F315F55 
 1343      61727453 
 1343      65745278 
 1343      41646472 
 1344              	.LASF17:
 1345 0266 73697A65 		.ascii	"sizetype\000"
 1345      74797065 
 1345      00
 1346              	.LASF34:
 1347 026f 74784461 		.ascii	"txDataByte\000"
 1347      74614279 
 1347      746500
 1348              	.LASF14:
 1349 027a 63686172 		.ascii	"char\000"
 1349      00
 1350              	.LASF2:
 1351 027f 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\11800025\AppData\Local\Temp\ccu8EfER.s 			page 41


 1351      7420696E 
 1351      7400
 1352              	.LASF35:
 1353 0289 55415254 		.ascii	"UART_1_UartSendBreakBlocking\000"
 1353      5F315F55 
 1353      61727453 
 1353      656E6442 
 1353      7265616B 
 1354              	.LASF18:
 1355 02a6 55415254 		.ascii	"UART_1_UartInit\000"
 1355      5F315F55 
 1355      61727449 
 1355      6E697400 
 1356              	.LASF4:
 1357 02b6 6C6F6E67 		.ascii	"long int\000"
 1357      20696E74 
 1357      00
 1358              	.LASF29:
 1359 02bf 746D7053 		.ascii	"tmpStatus\000"
 1359      74617475 
 1359      7300
 1360              	.LASF25:
 1361 02c9 6D617463 		.ascii	"matchReg\000"
 1361      68526567 
 1361      00
 1362              	.LASF16:
 1363 02d2 6C6F6E67 		.ascii	"long double\000"
 1363      20646F75 
 1363      626C6500 
 1364              	.LASF0:
 1365 02de 7369676E 		.ascii	"signed char\000"
 1365      65642063 
 1365      68617200 
 1366              	.LASF37:
 1367 02ea 74784374 		.ascii	"txCtrlReg\000"
 1367      726C5265 
 1367      6700
 1368              	.LASF28:
 1369 02f4 55415254 		.ascii	"UART_1_UartGetByte\000"
 1369      5F315F55 
 1369      61727447 
 1369      65744279 
 1369      746500
 1370              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
